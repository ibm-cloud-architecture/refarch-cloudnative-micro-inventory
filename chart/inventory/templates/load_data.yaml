apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-{{ .Values.service.name }}-job
  labels:
    chart: '{{ .Release.Name }}-{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}'
    release: {{ .Release.Name }}
    implementation: microprofile
spec:
  template:
    metadata:
      name: {{ .Release.Name }}-{{ .Values.service.name }}-job
      labels:
        chart: '{{ .Release.Name }}-{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}'
        release: {{ .Release.Name }}
        implementation: microprofile
    spec:
      restartPolicy: Never
      initContainers:
      {{- include "inventory.mysql.initcontainer" . | indent 6 }}
      containers:
      - name: populate-mysql
        image: {{ .Values.mysql.image }}:{{ .Values.mysql.imageTag }}
        imagePullPolicy: {{ .Values.mysql.imagePullPolicy }}
        volumeMounts:
        - mountPath: /inventory-data
          name: inventory-data
          readOnly: false
        command: ["/bin/bash", "-c"]
        {{- if or .Values.mysql.password .Values.mysql.existingSecret }}
        args: ["cp /inventory-data/mysql_data.sql .; sed -i \"s/inventorydb/${MYSQL_DATABASE}/g\" mysql_data.sql; until mysql -h ${MYSQL_HOST} -P ${MYSQL_PORT} -u${MYSQL_USER} -p${MYSQL_PASSWORD} <mysql_data.sql; do echo \"waiting for mysql\"; sleep 1; done; echo \"Loaded data into database\";"]
        {{- else }}
        args: ["cp /inventory-data/mysql_data.sql .; sed -i \"s/inventorydb/${MYSQL_DATABASE}/g\" mysql_data.sql; until mysql -h ${MYSQL_HOST} -P ${MYSQL_PORT} -u${MYSQL_USER}                     <mysql_data.sql; do echo \"waiting for mysql\"; sleep 1; done; echo \"Loaded data into database\";"]
        {{- end }}
        env:
        {{- include "inventory.mysql.environmentvariables" . | indent 8 }}
      volumes:
      - name: inventory-data
        configMap:
          name: {{ .Release.Name }}-{{ .Values.service.name }}-data
