buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.3.2.RELEASE")
        classpath("io.spring.gradle:dependency-management-plugin:0.6.1.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'io.spring.dependency-management'

springBoot {
    mainClass = "inventory.Application"
}

jar {
    baseName = 'micro-inventory'
    version = '0.0.1'
}

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencyManagement {
    imports {
        mavenBom 'org.springframework.cloud:spring-cloud-netflix:1.0.4.RELEASE'
    }
}

dependencies {
    compile('org.springframework.cloud:spring-cloud-starter-eureka') // TODO: Take out?
    compile('org.springframework.cloud:spring-cloud-starter-hystrix') // TODO: Take out?
    compile("org.springframework.boot:spring-boot-starter-web") {
        exclude module: "spring-boot-starter-tomcat"
    }
    compile("org.springframework.boot:spring-boot-starter-jetty")
    compile("org.springframework:spring-web")
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile('org.springframework.boot:spring-boot-starter-jdbc')
    compile("org.springframework.boot:spring-boot-configuration-processor")
    compile("mysql:mysql-connector-java:5.1.28")
    compile("org.apache.kafka:kafka-clients:0.10.0.+") // TODO: Take out?
    compile("com.squareup.okhttp3:okhttp:3.5.0")
    compile("org.json:json:20160212")
    compile("org.yaml:snakeyaml:1.8")

    testCompile('junit:junit:[4,)')
}

test {
    useJUnit()
    testLogging {
        events 'started', 'passed'
        showStandardStreams = true
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}
